#include <Windows.h>
#include <cstdio>
#include <thread>
#include <iostream>
#include <sstream>

int aslr(int x) { return(x - 0x400000 + reinterpret_cast<int>(GetModuleHandleA(0))); }

using r_print_typedef = int(__cdecl*)(int a1, const char*);
r_print_typedef r_print = (r_print_typedef)(aslr(0x748280));

void ConsoleBypass() 
{
    VirtualProtect(FreeConsole, 1, PAGE_EXECUTE_READWRITE, new unsigned long);
    *reinterpret_cast<char*>(FreeConsole) = 0xC3;
    AllocConsole();
    freopen("CONOUT$", "w", stdout);
    freopen("CONIN$", "r", stdin);
    SetWindowPos(GetConsoleWindow(), HWND_TOPMOST, -30, -30, 0, 0, SWP_DRAWFRAME | SWP_NOMOVE | SWP_NOSIZE | SWP_SHOWWINDOW);
    ShowWindow(GetConsoleWindow(), 1);
    SetConsoleTitleA("[ N O V A L I N E   P R I N T   E D I T I O N ]");
    HANDLE hConsole = GetStdHandle(STD_OUTPUT_HANDLE);
    SMALL_RECT Rect = { 0,0, 80, 20 };
    SetConsoleWindowInfo(hConsole, TRUE, &Rect);
    ShowScrollBar(GetConsoleWindow(), SB_BOTH, 0);
}

unsigned long __stdcall Pipe(void*) {
    char Buffer[999999];
    DWORD Len;
    HANDLE NamedPipe = CreateNamedPipe(TEXT("\\\\.\\pipe\\NovalinePrintEdition"),
        PIPE_ACCESS_DUPLEX | PIPE_TYPE_BYTE | PIPE_READMODE_BYTE, PIPE_WAIT,
        1, NULL, NULL, NMPWAIT_USE_DEFAULT_WAIT, NULL);

    while (NamedPipe != INVALID_HANDLE_VALUE)
    {
        if (ConnectNamedPipe(NamedPipe, NULL) != FALSE)
        {
            while (ReadFile(NamedPipe, Buffer, sizeof(Buffer) - 1, &Len, NULL) != FALSE)
            {
                Buffer[Len] = '\0';
            }
            r_print(0, Buffer);
            Sleep(10);
            r_print(1, Buffer);
            Sleep(10);
            r_print(2, Buffer);
        }
        DisconnectNamedPipe(NamedPipe);
    }
}

void main() {
    ConsoleBypass();

    std::cout << " [ N O V A L I N E   P R I N T   E D I T I O N ]\n\n Usage:\n  > Type any value in the textbox and press execute to see it in console! :D\n Make sure to open your Roblox console (F9)\n\n";
    
    CreateThread(0, 0, reinterpret_cast<LPTHREAD_START_ROUTINE>(Pipe), 0, 0, 0);

    r_print(1, "Type any value in the textbox and press execute to see it in console! :D");

    std::cout << " Closing Console In 5 Seconds...";
    Sleep(1000); std::cout << "\r";
    std::cout << " Closing Console In 4  Seconds...";
    Sleep(1000); std::cout << "\r";
    std::cout << " Closing Console In 3 Seconds...";
    Sleep(1000); std::cout << "\r";
    std::cout << " Closing Console In 2 Seconds...";
    Sleep(1000); std::cout << "\r";
    std::cout << " Closing Console In 1 Seconds...";
    Sleep(1000); ::ShowWindow(GetConsoleWindow(), SW_HIDE);

    //while (true) {
    //    std::cout << " > ";
    //    std::string input;
    //    std::getline(std::cin, input);

    //    if (input._Starts_with("print ")) {
    //        r_print(0, input.c_str());
    //    }

    //    else if (input._Starts_with("info ")) {
    //        r_print(1, input.c_str());
    //    }

    //    else if (input._Starts_with("warn ")) {
    //        r_print(2, input.c_str());
    //    }
    //}
}

BOOL APIENTRY DllMain( HMODULE hModule,
                       DWORD  ul_reason_for_call,
                       LPVOID lpReserved
                     )
{
    switch (ul_reason_for_call)
    {
    case DLL_PROCESS_ATTACH: {
        std::thread(main).detach();
    }
    case DLL_THREAD_ATTACH:
    case DLL_THREAD_DETACH:
    case DLL_PROCESS_DETACH:
        break;
    }
    return TRUE;
}

